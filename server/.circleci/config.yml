version: 2.1
jobs:
    build:
        docker:
            - image: circleci/php:7.3-node-browsers
            - image: circleci/mysql:5.7-ram                   

        environment:
            - APP_DEBUG: true
            - APP_ENV: testing
            - DB_CONNECTION: circle_test
            - MYSQL_ALLOW_EMPTY_PASSWORD: true

        steps:
            - checkout 
            - run: sudo apt update
            - run: sudo composer self-update --1
            - run: sudo docker-php-ext-install pdo_mysql
            # Install Library 
            - run: sudo apt-get install -y libpng-dev libjpeg-dev
            # Install PHP Extension 
            - run: sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
            - run: sudo docker-php-ext-install gd
            

            - restore_cache:
                key: composer-v1-{{ checksum "composer.lock" }}
            - run: composer install -n --prefer-dist  
            - save_cache:
                key: composer-v1-{{ checksum "composer.lock" }}
                paths:
                    - vendor

            - restore_cache:
                key: npm-v1-{{ checksum "package-lock.json" }}
            - run: 
                name: npm ci 
                command: |
                    if [ ! -d node_modules ]; then
                        npm ci
                    fi
            - save_cache:
                key: npm-v1-{{ checksum "package-lock.json" }}
                paths:
                    - node_modules

            - run: npm run dev
            - run: php artisan migrate
            - run: 
                name: php test
                command: vendor/bin/phpunit
            
    deploy:
        docker:
            - image: circleci/php:7.3-node-browsers
        steps:
            - add_ssh_keys
            - run:
                name: deploy
                command: |
                    ssh -o StrictHostKeyChecking=no -t ec2-user@${HOST_NAME} "cd /var/www/html/AWS-Tripsupporter/ && \
                        git pull origin master && \
                        composer install -n --no-dev --prefer-dist && \
                        npm ci && \
                        npm run prod && \
                        php artisan migrate --force && \
                        php artisan config:cache"

workflows:
    version: 2
    bulid_deploy:
        jobs:
            - build
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - master